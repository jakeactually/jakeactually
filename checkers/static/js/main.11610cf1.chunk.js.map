{"version":3,"sources":["util.js","Tile.js","Room.js","Assign.js","App.js","reportWebVitals.js","index.js"],"names":["count","makeConnect","params","setSocketCount","connect","socket","WebSocket","id","onmessage","ev","console","log","onerror","setTimeout","Tile","tileSize","offset","cell","mouse","current","setCurrent","path","setPath","isOver","some","o","x","y","isNone","className","image","tag","src","draggable","style","left","top","start","preventDefault","onMouseDown","onTouchStart","Room","useRouteMatch","addToast","useToasts","useState","setMouse","board","setBoard","Math","min","window","innerHeight","innerWidth","offsetAmount","abs","tileAndOffset","useEffect","document","body","ontouchmove","targetLocation","targetTouches","pageX","pageY","onmousemove","clientX","clientY","mouseMovement","a","axios","get","res","data","mouseTile","floor","end","length","currentOver","post","response","appearance","autoDismiss","makeEnd","onTouchEnd","onMouseUp","map","row","Assign","history","useHistory","push","defaults","baseURL","App","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.11610cf1.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nlet count = 0;\r\n\r\nexport const makeConnect = (params, setSocketCount) => {\r\n    const connect = () => {\r\n        const socket = new WebSocket(\r\n            `wss://jakeactually.com/checkers/api/State/${params.id}`\r\n        );\r\n\r\n        socket.onmessage = ev => {\r\n            setSocketCount(++count);\r\n            console.log(ev);\r\n        };\r\n\r\n        socket.onerror = ev => {\r\n            console.log(ev);\r\n            setTimeout(connect, 1000);\r\n        };\r\n    };\r\n    \r\n    return connect;\r\n};\r\n\r\nexport const mouseMovement = (setMouse) => {\r\n    document.body.ontouchmove = ev => {\r\n        const targetLocation = ev.targetTouches[0];\r\n\r\n        setMouse({\r\n        x: targetLocation.pageX,\r\n        y: targetLocation.pageY\r\n        })\r\n    };\r\n\r\n    document.body.onmousemove = ev => {\r\n        setMouse({\r\n        x: ev.clientX,\r\n        y: ev.clientY\r\n        })\r\n    };\r\n};\r\n\r\nexport const tileAndOffset = () => {\r\n    const tileSize = Math.min(window.innerHeight, window.innerWidth) / 8;\r\n    const offsetAmount = Math.abs(window.innerHeight - window.innerWidth) / 2;\r\n\r\n    const offset = window.innerWidth > window.innerHeight ?\r\n        { x: offsetAmount, y: 0 } :\r\n        { x: 0, y: offsetAmount };\r\n\r\n    return { tileSize, offset };\r\n};\r\n\r\nexport const makeEnd = (current, path, offset, setBoard, setCurrent, setPath, setMouse, params, addToast) => async () => {\r\n    if (!current || path.length < 2) {\r\n        setCurrent(null);\r\n        setPath([]);\r\n        return;\r\n    }\r\n\r\n    const currentOver = path[path.length - 1];\r\n    const isBlack = currentOver.x % 2 === currentOver.y % 2;\r\n\r\n    if (!isBlack) {\r\n        setCurrent(null);\r\n        setPath([]);\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post(`Turn/${params.id}`, path);\r\n        setBoard(res.data.board);\r\n    } catch (exception) {\r\n        addToast(exception.response.data, { appearance: 'error', autoDismiss: true });\r\n    }\r\n\r\n    setCurrent(null);\r\n    setPath([]);\r\n};\r\n ","export const Tile = ({ tileSize, offset, cell, mouse, current, setCurrent, path, setPath }) => {\r\n  const isOver = path.some(o => current && cell.x === o.x && cell.y === o.y);\r\n\r\n  if (cell.isNone) {\r\n    return <div\r\n      className={`square ${isOver ? 'yellow' : ''}`}>\r\n    </div>;\r\n  }\r\n\r\n  const image = '/checkers/' + ['None','Red','Blue','RedQueen','BlueQueen'][cell.tag] + '.svg';\r\n\r\n  if (current && cell.x === current.x && cell.y === current.y) {\r\n    return <div className={`square ${isOver ? 'yellow' : ''}`}>\r\n      <img\r\n        src={image}\r\n        className=\"tile\"\r\n        draggable={false}\r\n        style={{\r\n          left: mouse.x,\r\n          top: mouse.y,\r\n      }}></img>\r\n    </div>;\r\n  }\r\n\r\n  const start = ev => {\r\n    ev.preventDefault();\r\n    setPath([...path, { x: cell.x, y: cell.y }]);\r\n    setCurrent({ x: cell.x, y: cell.y });\r\n  };\r\n\r\n  return <div\r\n    className={`square ${isOver ? 'yellow' : ''}`}\r\n    onMouseDown={start}\r\n    onTouchStart={start}>\r\n    <img src={image} className=\"tile\" style={{\r\n      left: cell.x * tileSize + tileSize / 2 + offset.x,\r\n      top: cell.y * tileSize + tileSize / 2 + offset.y,\r\n    }}></img>\r\n  </div>;\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { makeConnect, mouseMovement, tileAndOffset, makeEnd } from './util';\r\nimport { Tile } from './Tile';\r\n\r\nexport function Room() {\r\n  const { params } = useRouteMatch();\r\n  const { addToast } = useToasts();\r\n  const [current, setCurrent] = useState(null);\r\n  const [mouse, setMouse] = useState({ x: 0, y: 0 });\r\n  const [board, setBoard] = useState(null);\r\n  const [path, setPath] = useState([]);\r\n  const [count, setSocketCount] = useState(0);\r\n  const [{ connect }] = useState({ connect: makeConnect(params, setSocketCount) });\r\n  const { tileSize, offset } = tileAndOffset();\r\n  \r\n  useEffect(() => {\r\n    mouseMovement(setMouse);\r\n    connect();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await axios.get(`Room/${params.id}`);\r\n      setBoard(res.data.board);\r\n    })();\r\n  }, [count]);\r\n\r\n  const mouseTile = {\r\n    x: Math.floor((mouse.x - offset.x) / tileSize),\r\n    y: Math.floor((mouse.y - offset.y) / tileSize)\r\n  };\r\n  \r\n  const isValid =\r\n    mouseTile.x >= 0 &&\r\n    mouseTile.x <= 7 &&\r\n    mouseTile.y >= 0 &&\r\n    mouseTile.y <= 7;\r\n  \r\n  const isBlack = mouseTile.x % 2 === mouseTile.y % 2;\r\n  // console.log(path);\r\n  \r\n  if (current && isValid && isBlack && !path.some(o => mouseTile.x === o.x && mouseTile.y === o.y)) {\r\n    setPath([...path, mouseTile]);\r\n  }\r\n\r\n  if (!board) {\r\n    return <div className=\"Error\">\r\n      Room is already playing\r\n    </div>;\r\n  }\r\n\r\n  const end = makeEnd(current, path, offset, setBoard,\r\n    setCurrent, setPath, setMouse, params, addToast);\r\n\r\n  return (\r\n    <div className=\"App\" onTouchEnd={end} onMouseUp={end}>\r\n      <div className=\"board\" >\r\n        {board.map((row, y) => <div className=\"row\" key={y}>\r\n          {row.map((cell, x) =>\r\n            <Tile\r\n              key={x}\r\n              tileSize={tileSize}\r\n              offset={offset}\r\n              cell={{ ...cell, x, y }}\r\n              mouse={mouse}\r\n              current={current}\r\n              setCurrent={setCurrent}\r\n              path={path}\r\n              setPath={setPath}>\r\n            </Tile>\r\n          )}\r\n        </div>)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Room;\r\n","\r\nimport axios from 'axios';\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport function Assign() {\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n        const res = await axios.get('Index');\r\n        console.log(res.data);\r\n        history.push(`/Room/${res.data}`);\r\n        })();\r\n    }, []);\r\n\r\n    return null;\r\n}\r\n","import { ToastProvider } from 'react-toast-notifications';\nimport axios from 'axios';\nimport { Room } from './Room';\nimport { Assign } from './Assign';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\naxios.defaults.baseURL = '/checkers/api/';\n\nfunction App() {\n  return (\n    <Router basename=\"/checkers\">\n      <ToastProvider>\n        <div>\n          <Switch>\n            <Route path=\"/Room/:id\">\n              <Room />\n            </Route>\n            <Route path=\"/\">\n              <Assign />\n            </Route>\n          </Switch>\n        </div>\n      </ToastProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}